<?php

require 'vendor/autoload.php';
$app = require 'bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

use App\Models\Document;
use App\Models\DocumentSection;
use App\Models\DocumentCustomField;
use Illuminate\Http\Request;

echo "๐ ุงุฎุชุจุงุฑ ุงูุทูุจ ุงููุงูู ูุน ุฌููุน ุงููุนุงููุงุช:\n\n";

// ูุญุงูุงุฉ ุงูุทูุจ ุงููุงูู
$queryString = 'search=&sort=latest&per_page=12&fields%5B9%5D=%D8%B5%D8%AD%D8%A7%D9%81%D8%A9&fields%5B10%5D=%D8%A7%D9%84%D8%AF%D9%88%D9%84%D8%A9+%D9%88%D9%86%D8%B8%D8%A7%D9%85+%D8%A7%D9%84%D8%AD%D9%83%D9%85&fields%5B6%5D=&fields%5B3%5D=&fields%5B2%5D%5Bday%5D=&fields%5B2%5D%5Bmonth%5D=&fields%5B2%5D%5Byear%5D=';

parse_str($queryString, $params);

echo "๐ ูุนุงููุงุช ุงูุทูุจ:\n";
print_r($params);
echo "\n";

// ุงูุญุตูู ุนูู ุงููุณู
$section = DocumentSection::where('slug', 'koanyn')->first();
echo "๐ ุงููุณู: {$section->name}\n\n";

// ุงูุญุตูู ุนูู ุงูุญููู ุงููุฎุตุตุฉ
$customFields = $section->customFields()->active()->orderBy('sort_order')->get();
echo "๐ท๏ธ ุงูุญููู ุงููุฎุตุตุฉ:\n";
foreach ($customFields as $field) {
    echo "  - ุงูุญูู {$field->id}: {$field->label} ({$field->type})\n";
}
echo "\n";

// ุจูุงุก ุงูุงุณุชุนูุงู
$query = $section->documents()
    ->with(['user'])
    ->published()
    ->latest('published_at');

echo "๐ ูุนุงูุฌุฉ ุงูููุงุชุฑ:\n";
$appliedFilters = [];

foreach ($customFields as $field) {
    echo "\n๐ท๏ธ ูุนุงูุฌุฉ ุงูุญูู {$field->id} ({$field->label}):\n";
    
    if ($field->type === 'date') {
        // ูุนุงูุฌุฉ ุญููู ุงูุชุงุฑูุฎ
        $dayValue = $params['fields'][$field->id]['day'] ?? null;
        $monthValue = $params['fields'][$field->id]['month'] ?? null;
        $yearValue = $params['fields'][$field->id]['year'] ?? null;
        
        echo "  ุงูุชุงุฑูุฎ: ููู={$dayValue}, ุดูุฑ={$monthValue}, ุณูุฉ={$yearValue}\n";
        
        $hasValidDay = !empty($dayValue) && $dayValue !== '';
        $hasValidMonth = !empty($monthValue) && $monthValue !== '';
        $hasValidYear = !empty($yearValue) && $yearValue !== '';
        
        if ($hasValidDay || $hasValidMonth || $hasValidYear) {
            echo "  โ ุชุทุจูู ููุชุฑ ุงูุชุงุฑูุฎ\n";
            // ุชุทุจูู ููุชุฑ ุงูุชุงุฑูุฎ...
        } else {
            echo "  โ ูุง ููุฌุฏ ููู ุตุงูุญุฉ ููุชุงุฑูุฎ\n";
        }
    }
    elseif ($field->type === 'number') {
        // ูุนุงูุฌุฉ ุญููู ุงูุฃุฑูุงู
        $minValue = $params['fields'][$field->id]['min'] ?? null;
        $maxValue = $params['fields'][$field->id]['max'] ?? null;
        
        echo "  ุงูุฑูู: min={$minValue}, max={$maxValue}\n";
        
        $hasValidMin = !empty($minValue) && $minValue !== '';
        $hasValidMax = !empty($maxValue) && $maxValue !== '';
        
        if ($hasValidMin || $hasValidMax) {
            echo "  โ ุชุทุจูู ููุชุฑ ุงูุฑูู\n";
        } else {
            echo "  โ ูุง ููุฌุฏ ููู ุตุงูุญุฉ ููุฑูู\n";
        }
    }
    else {
        // ูุนุงูุฌุฉ ุจุงูู ุฃููุงุน ุงูุญููู
        $filterValue = $params['fields'][$field->id] ?? null;
        
        echo "  ุงููููุฉ ุงูุฃุตููุฉ: '{$filterValue}'\n";
        echo "  Hex ุงูุฃุตูู: " . bin2hex($filterValue ?? '') . "\n";
        
        // ุชุทุจูู ูุนุงูุฌุฉ UTF-8 ููุง ูู ุงูููุชุฑููุฑ
        if (!empty($filterValue) && is_string($filterValue)) {
            $originalValue = $filterValue;
            
            // Ensure proper UTF-8 encoding
            $filterValue = mb_convert_encoding($filterValue, 'UTF-8', 'UTF-8');
            
            // Alternative: try to fix double-encoded UTF-8
            if (mb_check_encoding($filterValue, 'UTF-8') === false) {
                $filterValue = utf8_decode($filterValue);
                $filterValue = utf8_encode($filterValue);
            }
            
            echo "  ุงููููุฉ ุจุนุฏ ูุนุงูุฌุฉ UTF-8: '{$filterValue}'\n";
            echo "  Hex ุจุนุฏ ุงููุนุงูุฌุฉ: " . bin2hex($filterValue) . "\n";
            echo "  ุชุบูุฑุช ุงููููุฉ: " . ($originalValue !== $filterValue ? 'โ ูุนู' : 'โ ูุง') . "\n";
        }
        
        // ุงูุชุญูู ูู ุฃู ุงููููุฉ ููุณุช ูุงุฑุบุฉ
        if (!empty($filterValue) && $filterValue !== '') {
            echo "  โ ุชุทุจูู ุงูููุชุฑ\n";
            $appliedFilters[$field->id] = $filterValue;
            
            // ุชุทุจูู ุงูููุชุฑ ุนูู ุงูุงุณุชุนูุงู
            $query->whereHas('fieldValues', function($q) use ($field, $filterValue) {
                $q->where('field_id', $field->id);
                
                if ($field->type === 'multiselect' || $field->type === 'text' || $field->type === 'textarea') {
                    $cleanFilterValue = trim($filterValue);
                    $q->where('value', 'like', "%{$cleanFilterValue}%");
                } else {
                    $q->where('value', $filterValue);
                }
            });
        } else {
            echo "  โ ุงููููุฉ ูุงุฑุบุฉ - ูุง ูุชู ุชุทุจูู ุงูููุชุฑ\n";
        }
    }
}

echo "\n๐ ุงูููุงุชุฑ ุงููุทุจูุฉ:\n";
print_r($appliedFilters);

echo "\n๐ ุชูููุฐ ุงูุงุณุชุนูุงู:\n";
$documents = $query->get();
echo "ุนุฏุฏ ุงููุซุงุฆู: " . $documents->count() . "\n";

if ($documents->count() > 0) {
    echo "\n๐ ุงููุซุงุฆู:\n";
    foreach ($documents as $doc) {
        echo "  - {$doc->title} (ID: {$doc->id})\n";
    }
} else {
    echo "โ ูู ูุชู ุงูุนุซูุฑ ุนูู ูุซุงุฆู\n";
}